name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2



          

    - name: Remove old project files
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        port: 22
        script: |
          rm -rf /home/${{ secrets.AWS_EC2_USER }}/STFC-Automation || true

    - name: Create directory for new project files
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        port: 22
        script: |
          mkdir -p /home/${{ secrets.AWS_EC2_USER }}/STFC-Automation

    - name: Upload project files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        port: 22
        source: "."
        target: "/home/${{ secrets.AWS_EC2_USER }}/STFC-Automation"

    - name: Build and run the new application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        port: 22
        script: |
          cd /home/${{ secrets.AWS_EC2_USER }}/STFC-Automation
          /usr/local/go/bin/go build
          nohup ./stfc > /dev/null 2>&1 &

    - name: Verify the application is running
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        port: 22
        script: |
          sleep 5  # Wait a few seconds to ensure the process has time to start
          if pgrep -fl ./stfc; then
            echo "Application is running."
          else
            echo "Application failed to start."
            exit 1
          fi

    - name: Notify Slack
      run: |
        IST_DATE=$(TZ=Asia/Kolkata date +"%Y-%m-%d %H:%M:%S %Z")
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment complete: Application is running at '"$IST_DATE"'."}' https://hooks.slack.com/services/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
